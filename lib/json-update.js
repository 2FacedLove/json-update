// Generated by CoffeeScript 1.6.2
(function() {
  var fs, und;

  fs = require('fs-extra');

  und = require('underscore');

  exports.load = function(filename, cb) {
    return fs.readFile(filename, 'utf8', function(err, data) {
      var e;

      if (err != null) {
        return cb(new Error("Error reading JSON file " + filename + ": " + (err != null ? err.message : void 0)));
      }
      try {
        return cb(null, JSON.parse(data));
      } catch (_error) {
        e = _error;
        return cb(new Error("Error parsing JSON in " + filename + ". Data is " + data + ". Error was " + e.message));
      }
    });
  };

  exports.update = function(filename, obj, cb) {
    var loaded;

    loaded = function(data) {
      if (typeof err !== "undefined" && err !== null) {
        return cb(new Error("Could not load JSON for update: " + (typeof err !== "undefined" && err !== null ? err.message : void 0)));
      }
      data = und.extend(data, obj);
      return fs.outputJson(filename, data, function(err) {
        if (err != null) {
          return cb(new Error("Problem saving JSON file: " + (err != null ? err.message : void 0)));
        }
        return cb(null, data);
      });
    };
    return fs.exists(filename, function(exists) {
      if (!exists) {
        return loaded({});
      } else {
        return exports.load(filename, function(err, filedata) {
          return loaded(filedata);
        });
      }
    });
  };

}).call(this);
