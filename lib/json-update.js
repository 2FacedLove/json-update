// Generated by ToffeeScript 1.6.3-1
(function() {
  var dash, fs, lockfile, opts;

  fs = require('fs-extra');

  lockfile = require('lockfile');

  dash = require('lodash');

  opts = {
    wait: 2000,
    stale: 30000,
    retries: 2,
    retryWait: 100
  };

  exports.load = function(filename, cb) {
    var data, e, er, err,
      _this = this;
    lockfile.lock("" + filename + ".lock", opts, function() {
      er = arguments[0];
      if (er != null) {
        return cb(er);
      } else {
        fs.readFile(filename, 'utf8', function() {
          err = arguments[0], data = arguments[1];
          lockfile.unlock("" + filename + ".lock", function() {
            if (err != null) {
              return cb(new Error("Error reading JSON file " + filename + ": " + (err != null ? err.message : void 0)));
            }
            try {
              return cb(null, JSON.parse(data));
            } catch (_error) {
              e = _error;
              return cb(new Error("Error parsing JSON in " + filename + ". Data is " + data + ". Error was " + e.message));
            }
          });
        });
      }
    });
  };

  exports.update = function(filename, obj, cb) {
    var err, filedata,
      _this = this;
    function loaded(data, dolock) {
      var er1, err,
        _this = this;
      data = dash.merge(data, obj);
      if (dolock) {
        lockfile.lock("" + filename + ".lock", function() {
          er1 = arguments[0];
          _$$_4();
        });
      } else {
        er1 = null;
        _$$_4();
      }
      function _$$_4() {
        if (er1 != null) {
          return cb(er1);
        } else {
          fs.outputJson(filename, data, function() {
            err = arguments[0];
            lockfile.unlock("" + filename + ".lock", function() {
              if (err != null) {
                return cb(new Error("Problem saving JSON file: " + (err != null ? err.message : void 0)));
              }
              return cb(null, data);
            });
          });
        }
      };
    };
    fs.exists(filename, function(_$$_2) {
      _$cb$_1(!_$$_2);
    });
    function _$cb$_1(_$$_0) {
      if (_$$_0) {
        return loaded({}, false);
      } else {
        exports.load(filename, function() {
          err = arguments[0], filedata = arguments[1];
          return loaded(filedata, true);
        });
      }
    };
  };

}).call(this);
